Metadata-Version: 2.4
Name: mapvis
Version: 0.1.0
Summary: A module for visualizing celltype and feature mappings
Author: Maximilian Schumacher
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: pandas>=1.3.0
Requires-Dist: matplotlib>=3.3.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov>=2.0; extra == "dev"
Provides-Extra: image
Requires-Dist: dataframe-image>=0.1.0; extra == "image"
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# MapVis

A Python module for visualizing celltype and feature (RNA/Protein) mappings between datasets.

## Installation

````bash
pip install mapvis

# For image export functionality
pip install mapvis[image]

## Quick Start

### Celltype Mapping

```python
from mapvis import MapVisualizer

# Define mappings
dataset1_mapping = {
    'B-CD22-CD40': 'B-CD22-CD40',
    'CD4 T': 'CD4+ T cell',
    'Plasma': 'plasma cell'
}

dataset2_mapping = {
    'CD4+ T cell': 'CD4+ T cell',
    'B-CD22-CD40': 'B-CD22-CD40',
    'plasma cell': 'plasma cell'
}

# Create visualization
vis = MapVisualizer()
styled_table = vis.visualize_celltype_mapping(
    dataset1_mapping,
    dataset2_mapping,
    dataset1_name="scRNA-seq",
    dataset2_name="CODEX"
)

# Display in Jupyter
styled_table
````

### Feature Mapping

```python
# Define feature mappings
rna_mapping = {
    'PTPRC': 'PTPRC',
    'HLA-DRB1': 'HLA-DR',
    'HLA-DRB5': 'HLA-DR',
    'HLA-DRA': 'HLA-DR'
}

protein_mapping = {
    'CD45': 'PTPRC',
    'CD45RA': 'PTPRC',
    'HLA-DR': 'HLA-DR'
}

# Create visualization
styled_table = vis.visualize_feature_mapping(
    rna_mapping,
    protein_mapping
)
```

### Custom Color Maps

```python
# Define custom colors for specific consensus labels
custom_colors = {
    'B-CD22-CD40': '#FF6B6B',
    'CD4+ T cell': '#4ECDC4',
    'plasma cell': '#45B7D1'
}

# Apply custom colors
styled_table = vis.visualize_celltype_mapping(
    dataset1_mapping,
    dataset2_mapping,
    color_map=custom_colors
)
```

### Export to Image

```python
# Export styled table to PNG
vis.export_to_image(styled_table, 'celltype_mapping.png')

# Use different backend if Chrome is not available (not working yet)
vis.export_to_image(styled_table, 'celltype_mapping.png',
                   table_conversion='matplotlib')
```

### Loading from TSV/CSV

```python
from mapvis import load_mapping_from_tsv, load_mapping_from_csv

# Load from TSV (recommended for data with commas)
mapping = load_mapping_from_tsv(
    'celltype_mapping.tsv',
    source_col='original_name',
    target_col='consensus_name'
)

# Load from CSV (if no commas in data)
mapping = load_mapping_from_csv(
    'mapping.csv',
    source_col='original_name',
    target_col='consensus_name'
)

# Or specify delimiter explicitly
mapping = load_mapping_from_csv(
    'mapping.txt',
    source_col='original_name',
    target_col='consensus_name',
    delimiter='\t'
)
```

## Features

Color-coded visualization based on consensus labels
Support for both celltype and feature mappings
Automatic operation detection (sum/max) for many-to-one mappings
Multi-line cells for multiple features mapping to same consensus
Custom color maps support
Automatic sorting (mappings in both datasets first, single-dataset mappings last)
Export styled tables to image files (PNG, JPG, etc.)
CSV file support
Input validation
Customizable column names
Hidden table index for cleaner display

## Backends for Image Export

The image export functionality supports multiple backends:

chrome (default): Best quality, requires Chrome/Chromium
matplotlib: Works without browser, very fast, but limited styling support
selenium: Alternative browser-based option, requires Firefox

## Testing

```bash
pip install -e ".[dev]"
pytest tests/
```
